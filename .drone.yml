---
kind: pipeline
type: docker
name: amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: prepare
    image: library/alpine:3.12
    environment:
      GOLANG: golang:1.16-alpine3.12
      IMAGE: drone.cattle.io/rancher/kim
    commands:
      - "apk --no-cache add docker-cli git"
      - "docker build --target docker --build-arg GOLANG --tag $${IMAGE}:possible --tag $${IMAGE}:$(git rev-parse --short HEAD) ."
    volumes:
      - name: docker
        path: /var/run/docker.sock

  - name: build
    image: drone.cattle.io/rancher/kim:possible
    pull: never
    environment:
      DOCKER_BUILDKIT: "1"
      GOLANG: drone.cattle.io/rancher/kim:possible
    commands:
      - make GOOS=linux   GOARCH=amd64 TAG=${DRONE_TAG:-$(git describe --tags --always)} dist
      - make GOOS=linux   GOARCH=arm64 TAG=${DRONE_TAG:-$(git describe --tags --always)} dist
      - make GOOS=linux   GOARCH=arm   TAG=${DRONE_TAG:-$(git describe --tags --always)} dist
      - make GOOS=darwin  GOARCH=amd64 TAG=${DRONE_TAG:-$(git describe --tags --always)} dist
      - make GOOS=darwin  GOARCH=arm64 TAG=${DRONE_TAG:-$(git describe --tags --always)} dist
      - make GOOS=windows GOARCH=amd64 TAG=${DRONE_TAG:-$(git describe --tags --always)} dist
    volumes:
      - name: docker
        path: /var/run/docker.sock

  - name: image
    image: drone.cattle.io/rancher/kim:possible
    pull: never
    environment:
      DOCKER_BUILDKIT: "1"
      GOLANG: drone.cattle.io/rancher/kim:possible
    commands:
      - make TAG=${DRONE_TAG:-$(git describe --tags --always)} image
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - push
        - pull_request

  - name: upload
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      checksum:
        - sha256
      checksum_file: CHECKSUMsum.txt
      checksum_flatten: true
      files:
        - dist/artifacts/*
      prerelease: true
    when:
      event:
        - tag
      instance:
        - drone-publish.rancher.io
      ref:
        - refs/head/master
        - refs/tags/*

  - name: publish
    image: drone.cattle.io/rancher/kim:possible
    pull: never
    commands:
      - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - make TAG=${DRONE_TAG:-$(git describe --tags --always)} publish
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - tag
      instance:
        - drone-publish.rancher.io
      ref:
        - refs/head/master
        - refs/tags/*

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: arm64

platform:
  os: linux
  arch: arm64

steps:
  - name: prepare
    image: library/alpine:3.12
    environment:
      GOLANG: golang:1.16-alpine3.12
      IMAGE: drone.cattle.io/rancher/kim
    commands:
      - "apk --no-cache add docker-cli git"
      - "docker build --target docker --build-arg GOLANG --tag $${IMAGE}:possible --tag $${IMAGE}:$(git rev-parse --short HEAD) ."
    volumes:
      - name: docker
        path: /var/run/docker.sock

  - name: image
    image: drone.cattle.io/rancher/kim:possible
    pull: never
    environment:
      GOLANG: drone.cattle.io/rancher/kim:possible
    commands:
      - make TAG=${DRONE_TAG:-$(git describe --tags --always)} image
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - push
        - pull_request

  - name: publish
    image: drone.cattle.io/rancher/kim:possible
    pull: never
    commands:
      - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - make TAG=${DRONE_TAG:-$(git describe --tags --always)} publish
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - tag
      instance:
        - drone-publish.rancher.io
      ref:
        - refs/head/master
        - refs/tags/*

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: armhf

platform:
  os: linux
  arch: arm

steps:
  - name: prepare
    image: library/alpine:3.12
    environment:
      GOLANG: golang:1.16-alpine3.12
      IMAGE: drone.cattle.io/rancher/kim
    commands:
      - "apk --no-cache add docker-cli git"
      - "docker build --target docker --build-arg GOLANG --tag $${IMAGE}:possible --tag $${IMAGE}:$(git rev-parse --short HEAD) ."
    volumes:
      - name: docker
        path: /var/run/docker.sock

  - name: image
    image: drone.cattle.io/rancher/kim:possible
    pull: never
    environment:
      GOLANG: drone.cattle.io/rancher/kim:possible
    commands:
      - make TAG=${DRONE_TAG:-$(git describe --tags --always)} image
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - push
        - pull_request

  - name: publish
    image: drone.cattle.io/rancher/kim:possible
    pull: never
    commands:
      - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - make TAG=${DRONE_TAG:-$(git describe --tags --always)} publish
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - tag
      instance:
        - drone-publish.rancher.io
      ref:
        - refs/head/master
        - refs/tags/*

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

...
